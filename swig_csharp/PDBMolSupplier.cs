//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace GraphMolWrap {

public class PDBMolSupplier : MolSupplier {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal PDBMolSupplier(global::System.IntPtr cPtr, bool cMemoryOwn) : base(RDKFuncsPINVOKE.PDBMolSupplier_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(PDBMolSupplier obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~PDBMolSupplier() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          RDKFuncsPINVOKE.delete_PDBMolSupplier(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public PDBMolSupplier(SWIGTYPE_p_std__istream inStream, bool takeOwnership, bool sanitize, bool removeHs, uint flavor, bool proximityBonding) : this(RDKFuncsPINVOKE.new_PDBMolSupplier__SWIG_0(SWIGTYPE_p_std__istream.getCPtr(inStream), takeOwnership, sanitize, removeHs, flavor, proximityBonding), true) {
    if (RDKFuncsPINVOKE.SWIGPendingException.Pending) throw RDKFuncsPINVOKE.SWIGPendingException.Retrieve();
  }

  public PDBMolSupplier(SWIGTYPE_p_std__istream inStream, bool takeOwnership, bool sanitize, bool removeHs, uint flavor) : this(RDKFuncsPINVOKE.new_PDBMolSupplier__SWIG_1(SWIGTYPE_p_std__istream.getCPtr(inStream), takeOwnership, sanitize, removeHs, flavor), true) {
    if (RDKFuncsPINVOKE.SWIGPendingException.Pending) throw RDKFuncsPINVOKE.SWIGPendingException.Retrieve();
  }

  public PDBMolSupplier(SWIGTYPE_p_std__istream inStream, bool takeOwnership, bool sanitize, bool removeHs) : this(RDKFuncsPINVOKE.new_PDBMolSupplier__SWIG_2(SWIGTYPE_p_std__istream.getCPtr(inStream), takeOwnership, sanitize, removeHs), true) {
    if (RDKFuncsPINVOKE.SWIGPendingException.Pending) throw RDKFuncsPINVOKE.SWIGPendingException.Retrieve();
  }

  public PDBMolSupplier(SWIGTYPE_p_std__istream inStream, bool takeOwnership, bool sanitize) : this(RDKFuncsPINVOKE.new_PDBMolSupplier__SWIG_3(SWIGTYPE_p_std__istream.getCPtr(inStream), takeOwnership, sanitize), true) {
    if (RDKFuncsPINVOKE.SWIGPendingException.Pending) throw RDKFuncsPINVOKE.SWIGPendingException.Retrieve();
  }

  public PDBMolSupplier(SWIGTYPE_p_std__istream inStream, bool takeOwnership) : this(RDKFuncsPINVOKE.new_PDBMolSupplier__SWIG_4(SWIGTYPE_p_std__istream.getCPtr(inStream), takeOwnership), true) {
    if (RDKFuncsPINVOKE.SWIGPendingException.Pending) throw RDKFuncsPINVOKE.SWIGPendingException.Retrieve();
  }

  public PDBMolSupplier(SWIGTYPE_p_std__istream inStream) : this(RDKFuncsPINVOKE.new_PDBMolSupplier__SWIG_5(SWIGTYPE_p_std__istream.getCPtr(inStream)), true) {
    if (RDKFuncsPINVOKE.SWIGPendingException.Pending) throw RDKFuncsPINVOKE.SWIGPendingException.Retrieve();
  }

  public PDBMolSupplier(string fname, bool sanitize, bool removeHs, uint flavor, bool proximityBonding) : this(RDKFuncsPINVOKE.new_PDBMolSupplier__SWIG_6(fname, sanitize, removeHs, flavor, proximityBonding), true) {
    if (RDKFuncsPINVOKE.SWIGPendingException.Pending) throw RDKFuncsPINVOKE.SWIGPendingException.Retrieve();
  }

  public PDBMolSupplier(string fname, bool sanitize, bool removeHs, uint flavor) : this(RDKFuncsPINVOKE.new_PDBMolSupplier__SWIG_7(fname, sanitize, removeHs, flavor), true) {
    if (RDKFuncsPINVOKE.SWIGPendingException.Pending) throw RDKFuncsPINVOKE.SWIGPendingException.Retrieve();
  }

  public PDBMolSupplier(string fname, bool sanitize, bool removeHs) : this(RDKFuncsPINVOKE.new_PDBMolSupplier__SWIG_8(fname, sanitize, removeHs), true) {
    if (RDKFuncsPINVOKE.SWIGPendingException.Pending) throw RDKFuncsPINVOKE.SWIGPendingException.Retrieve();
  }

  public PDBMolSupplier(string fname, bool sanitize) : this(RDKFuncsPINVOKE.new_PDBMolSupplier__SWIG_9(fname, sanitize), true) {
    if (RDKFuncsPINVOKE.SWIGPendingException.Pending) throw RDKFuncsPINVOKE.SWIGPendingException.Retrieve();
  }

  public PDBMolSupplier(string fname) : this(RDKFuncsPINVOKE.new_PDBMolSupplier__SWIG_10(fname), true) {
    if (RDKFuncsPINVOKE.SWIGPendingException.Pending) throw RDKFuncsPINVOKE.SWIGPendingException.Retrieve();
  }

  public override void init() {
    RDKFuncsPINVOKE.PDBMolSupplier_init(swigCPtr);
    if (RDKFuncsPINVOKE.SWIGPendingException.Pending) throw RDKFuncsPINVOKE.SWIGPendingException.Retrieve();
  }

  public override void reset() {
    RDKFuncsPINVOKE.PDBMolSupplier_reset(swigCPtr);
    if (RDKFuncsPINVOKE.SWIGPendingException.Pending) throw RDKFuncsPINVOKE.SWIGPendingException.Retrieve();
  }

  public override ROMol next() {
    global::System.IntPtr cPtr = RDKFuncsPINVOKE.PDBMolSupplier_next(swigCPtr);
    ROMol ret = (cPtr == global::System.IntPtr.Zero) ? null : new ROMol(cPtr, true);
    if (RDKFuncsPINVOKE.SWIGPendingException.Pending) throw RDKFuncsPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override bool atEnd() {
    bool ret = RDKFuncsPINVOKE.PDBMolSupplier_atEnd(swigCPtr);
    if (RDKFuncsPINVOKE.SWIGPendingException.Pending) throw RDKFuncsPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}

}
