//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace GraphMolWrap {

public class RecursiveStructureQuery : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal RecursiveStructureQuery(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(RecursiveStructureQuery obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~RecursiveStructureQuery() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          RDKFuncsPINVOKE.delete_RecursiveStructureQuery(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public RecursiveStructureQuery() : this(RDKFuncsPINVOKE.new_RecursiveStructureQuery__SWIG_0(), true) {
    if (RDKFuncsPINVOKE.SWIGPendingException.Pending) throw RDKFuncsPINVOKE.SWIGPendingException.Retrieve();
  }

  public RecursiveStructureQuery(ROMol query, uint serialNumber) : this(RDKFuncsPINVOKE.new_RecursiveStructureQuery__SWIG_1(ROMol.getCPtr(query), serialNumber), true) {
    if (RDKFuncsPINVOKE.SWIGPendingException.Pending) throw RDKFuncsPINVOKE.SWIGPendingException.Retrieve();
  }

  public RecursiveStructureQuery(ROMol query) : this(RDKFuncsPINVOKE.new_RecursiveStructureQuery__SWIG_2(ROMol.getCPtr(query)), true) {
    if (RDKFuncsPINVOKE.SWIGPendingException.Pending) throw RDKFuncsPINVOKE.SWIGPendingException.Retrieve();
  }

  public static int getAtIdx(Atom at) {
    int ret = RDKFuncsPINVOKE.RecursiveStructureQuery_getAtIdx(Atom.getCPtr(at));
    if (RDKFuncsPINVOKE.SWIGPendingException.Pending) throw RDKFuncsPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void setQueryMol(ROMol query) {
    RDKFuncsPINVOKE.RecursiveStructureQuery_setQueryMol(swigCPtr, ROMol.getCPtr(query));
    if (RDKFuncsPINVOKE.SWIGPendingException.Pending) throw RDKFuncsPINVOKE.SWIGPendingException.Retrieve();
  }

  public ROMol getQueryMol() {
    global::System.IntPtr cPtr = RDKFuncsPINVOKE.RecursiveStructureQuery_getQueryMol(swigCPtr);
    ROMol ret = (cPtr == global::System.IntPtr.Zero) ? null : new ROMol(cPtr, true);
    if (RDKFuncsPINVOKE.SWIGPendingException.Pending) throw RDKFuncsPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SWIGTYPE_p_Queries__QueryT_int_RDKit__Atom_const_p_true_t copy() {
    global::System.IntPtr cPtr = RDKFuncsPINVOKE.RecursiveStructureQuery_copy(swigCPtr);
    SWIGTYPE_p_Queries__QueryT_int_RDKit__Atom_const_p_true_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_Queries__QueryT_int_RDKit__Atom_const_p_true_t(cPtr, false);
    if (RDKFuncsPINVOKE.SWIGPendingException.Pending) throw RDKFuncsPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public uint getSerialNumber() {
    uint ret = RDKFuncsPINVOKE.RecursiveStructureQuery_getSerialNumber(swigCPtr);
    if (RDKFuncsPINVOKE.SWIGPendingException.Pending) throw RDKFuncsPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}

}
