//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace GraphMolWrap {

public class Flagged_Atomic_Params_Vect : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal Flagged_Atomic_Params_Vect(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(Flagged_Atomic_Params_Vect obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~Flagged_Atomic_Params_Vect() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          RDKFuncsPINVOKE.delete_Flagged_Atomic_Params_Vect(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public Flagged_Atomic_Params_Vect() : this(RDKFuncsPINVOKE.new_Flagged_Atomic_Params_Vect__SWIG_0(), true) {
    if (RDKFuncsPINVOKE.SWIGPendingException.Pending) throw RDKFuncsPINVOKE.SWIGPendingException.Retrieve();
  }

  public Flagged_Atomic_Params_Vect(Atomic_Params_Vect t, bool u) : this(RDKFuncsPINVOKE.new_Flagged_Atomic_Params_Vect__SWIG_1(Atomic_Params_Vect.getCPtr(t), u), true) {
    if (RDKFuncsPINVOKE.SWIGPendingException.Pending) throw RDKFuncsPINVOKE.SWIGPendingException.Retrieve();
  }

  public Flagged_Atomic_Params_Vect(Flagged_Atomic_Params_Vect p) : this(RDKFuncsPINVOKE.new_Flagged_Atomic_Params_Vect__SWIG_2(Flagged_Atomic_Params_Vect.getCPtr(p)), true) {
    if (RDKFuncsPINVOKE.SWIGPendingException.Pending) throw RDKFuncsPINVOKE.SWIGPendingException.Retrieve();
  }

  public Atomic_Params_Vect first {
    set {
      RDKFuncsPINVOKE.Flagged_Atomic_Params_Vect_first_set(swigCPtr, Atomic_Params_Vect.getCPtr(value));
      if (RDKFuncsPINVOKE.SWIGPendingException.Pending) throw RDKFuncsPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      global::System.IntPtr cPtr = RDKFuncsPINVOKE.Flagged_Atomic_Params_Vect_first_get(swigCPtr);
      Atomic_Params_Vect ret = (cPtr == global::System.IntPtr.Zero) ? null : new Atomic_Params_Vect(cPtr, false);
      if (RDKFuncsPINVOKE.SWIGPendingException.Pending) throw RDKFuncsPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public bool second {
    set {
      RDKFuncsPINVOKE.Flagged_Atomic_Params_Vect_second_set(swigCPtr, value);
      if (RDKFuncsPINVOKE.SWIGPendingException.Pending) throw RDKFuncsPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      bool ret = RDKFuncsPINVOKE.Flagged_Atomic_Params_Vect_second_get(swigCPtr);
      if (RDKFuncsPINVOKE.SWIGPendingException.Pending) throw RDKFuncsPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

}

}
